/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import negocion.*;

/**
 *
 * @author David Torrez
 */
public class Pinscripcion extends javax.swing.JFrame {

    /**
     * Creates new form Pinscripcion
     */
    public Ninscripcion nInscripcion;
    public Ndisciplina nDisciplina;
    public Ncliente nCliente;

    public Pinscripcion() {
        initComponents();
        this.setLocationRelativeTo(null);
        nInscripcion = new Ninscripcion();
        nDisciplina = new Ndisciplina();
        nCliente = new Ncliente();
        this.getInscripciones();
        this.getDisciplinas();
        this.getClientes();
        this.jtextId.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbtnPmain = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDisciplina = new javax.swing.JTable();
        jcbxClientes = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jtextFecha = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jbtnAddInscripcion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDetalleInscripcion = new javax.swing.JTable();
        jbtnRegistrar = new javax.swing.JButton();
        jbtnQuitar = new javax.swing.JButton();
        jlbMontoTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtextMontoTotal = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableInscripciones = new javax.swing.JTable();
        jtextId = new javax.swing.JTextField();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Gestionar Inscripci√≥n");

        jbtnPmain.setText("Menu");
        jbtnPmain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPmainActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente");

        jTableDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nro", "Nombre", "Instructor", "Sala"
            }
        ));
        jScrollPane1.setViewportView(jTableDisciplina);

        jcbxClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Fecha");

        jtextFecha.setText("2020-05-23 12:40:89");

        jLabel5.setText("Lista de Disciplina. ctr +clic: selecciona + de 1");

        jbtnAddInscripcion.setText("agregar a inscripcion");
        jbtnAddInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddInscripcionActionPerformed(evt);
            }
        });

        jTableDetalleInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Disciplina", "Fecha Inicio", "Fecha Fin", "Monto (Bs)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDetalleInscripcion.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableDetalleInscripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTableDetalleInscripcionMouseExited(evt);
            }
        });
        jScrollPane2.setViewportView(jTableDetalleInscripcion);

        jbtnRegistrar.setText("Registrar");
        jbtnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRegistrarActionPerformed(evt);
            }
        });

        jbtnQuitar.setText("Quitar");
        jbtnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnQuitarActionPerformed(evt);
            }
        });

        jlbMontoTotal.setText("Monto Total : 80 bs");

        jLabel7.setText("Inscripcion");

        jtextMontoTotal.setText("180");

        jTableInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "Cliente", "Monto", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableInscripciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableInscripcionesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableInscripciones);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)
                                            .addComponent(jtextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtextId, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(181, 181, 181)
                                    .addComponent(jLabel1)
                                    .addGap(161, 161, 161)
                                    .addComponent(jbtnPmain))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(244, 244, 244)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jbtnAddInscripcion)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(80, 80, 80)))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jbtnRegistrar)
                .addGap(26, 26, 26)
                .addComponent(jbtnQuitar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtextMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jbtnPmain))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jbtnAddInscripcion)
                                .addComponent(jtextId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnRegistrar)
                    .addComponent(jbtnQuitar)
                    .addComponent(jlbMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtextMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPmainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPmainActionPerformed
        // TODO add your handling code here:
        new Pmain().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbtnPmainActionPerformed

    private void jbtnAddInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddInscripcionActionPerformed
        // TODO add your handling code here:
        addATablaInscripcion();
    }//GEN-LAST:event_jbtnAddInscripcionActionPerformed

    private void jbtnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnQuitarActionPerformed
        // TODO add your handling code here:
        quitarDisciplinaInscripcion();
    }//GEN-LAST:event_jbtnQuitarActionPerformed


    private void jbtnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRegistrarActionPerformed
        // TODO add your handling code here:
        try {
            if (jcbxClientes.isEnabled() && jTableDetalleInscripcion.getRowCount() > 0 && jcbxClientes.getSelectedIndex() != 0
                    && !"".equals(jtextMontoTotal.getText())) {

                //Datos del la Boleta de Inscripcion
                Ncliente cliente = (Ncliente) jcbxClientes.getSelectedItem();
                String ciCliente = cliente.getCi();
                String fecha = jtextFecha.getText().trim();
                float montoTotal = Float.parseFloat(jtextMontoTotal.getText().trim());

                //insertando Inscripcion
                nInscripcion.setInscripcionR(fecha, montoTotal, Integer.parseInt(ciCliente));

                //System.out.println("MaxId:" + this.nInscripcion.getMaxId());
                //Datos del Detalle de Inscripcion
                int count = jTableDetalleInscripcion.getRowCount();
                // System.out.println("idClient" + ciCliente + " Fecha: " + fecha + " Monto: " + montoTotal + " Couunt: " + count);
                for (int i = 0; i < count; i++) {
                    int idDisciplina = Integer.parseInt(jTableDetalleInscripcion.getValueAt(i, 0).toString());
                    String fechaInicio = jTableDetalleInscripcion.getValueAt(i, 2).toString().trim();
                    String fechaFin = jTableDetalleInscripcion.getValueAt(i, 3).toString().trim();
                    float monto = Float.parseFloat(jTableDetalleInscripcion.getValueAt(i, 4).toString().trim());
                    //System.out.println("idDisc" + idDisciplina + " FechaI: " + fechaInicio + " FechaF: " + fechaFin + " MontoT: " + monto);
                    nInscripcion.addDetalleInscripcion(idDisciplina, fechaInicio, fechaFin, monto);
                }
                this.nInscripcion.setId(nInscripcion.getMaxId());
                nInscripcion.setDetalleInscripcionR(); //inserta el detalle
                nInscripcion.vaciarDetalleInscripcion();

                System.out.println("Registrado");
            }
            this.limpiar();
            this.getInscripciones();
            this.nInscripcion.vaciarDetalleInscripcion();
        } catch (Exception ex) {
            Logger.getLogger(Pinscripcion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnRegistrarActionPerformed

    private void jTableDetalleInscripcionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDetalleInscripcionMouseExited
        // TODO add your handling code here:
        int count = jTableDetalleInscripcion.getRowCount();
        float total = 0;
        for (int i = 0; i < count; i++) {
            String dato = jTableDetalleInscripcion.getValueAt(i, 4).toString().trim();

            if (!"".equals(dato)) {
                float monto = Float.parseFloat(dato);
                total += monto;
            }
        }
        jtextMontoTotal.setText(String.valueOf(total));
        jlbMontoTotal.setText("Monto Total " + total + " BS");

    }//GEN-LAST:event_jTableDetalleInscripcionMouseExited

    private void jTableInscripcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableInscripcionesMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        String id = source.getModel().getValueAt(row, 0) + "";
        nInscripcion.setId(Integer.parseInt(id.trim()));
        ArrayList<Map> datos = nInscripcion.getDetalleInscripcion();

        this.mostrarDetalleInscripcion(datos);
        System.out.println("Cargo datos");

    }//GEN-LAST:event_jTableInscripcionesMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        try {
            if (!jcbxClientes.isEnabled() && jTableDetalleInscripcion.getRowCount() > 0
                    && !"".equals(jtextMontoTotal.getText())) {

                int id = Integer.parseInt(jtextId.getText().trim());
                float monto = Float.parseFloat(jtextMontoTotal.getText().trim());
                String fecha = jtextFecha.getText().trim();

                //Agregamos los nuevos valores
                this.nInscripcion.setInscripcionM(
                        id,
                        fecha,
                        monto);

                //Eliminar los detalle de la inscripcion
                nInscripcion.setId(id);
                nInscripcion.setDetalleInscripcionE();
                

                //Insertando nuevo Detalle de Inscripcion
                int count = jTableDetalleInscripcion.getRowCount();
                // System.out.println("idClient" + ciCliente + " Fecha: " + fecha + " Monto: " + montoTotal + " Couunt: " + count);
                for (int i = 0; i < count; i++) {
                    Ndisciplina disciplina = (Ndisciplina) jTableDetalleInscripcion.getValueAt(i, 1);
                    String fechaInicio = jTableDetalleInscripcion.getValueAt(i, 2).toString().trim();
                    String fechaFin = jTableDetalleInscripcion.getValueAt(i, 3).toString().trim();
                    float subMonto = Float.parseFloat(jTableDetalleInscripcion.getValueAt(i, 4).toString().trim());
                    nInscripcion.addDetalleInscripcion(disciplina.getId(), fechaInicio, fechaFin, subMonto);
                }
                nInscripcion.setDetalleInscripcionR();
                
                System.out.println("Modificado");

            }

            limpiar();
            this.getInscripciones();
        } catch (Exception ex) {
            Logger.getLogger(Pinscripcion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (!jcbxClientes.isEnabled()) {
            int selectedOption = JOptionPane.showConfirmDialog(null,
                    "Esta Seguro de Elimanar la Boleta de Inscripcion" + '?',
                    "Eligue",
                    JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION) {
                try {
                    //eliminamos sus Detalles
                    int id = Integer.parseInt(jtextId.getText().trim());
                    nInscripcion.setId(id);
                    nInscripcion.setDetalleInscripcionE();
                    //elimininamos la disciplina
                    nInscripcion.setInscripcionE();
                    
                    System.out.println("Eliminado");
                } catch (Exception ex) {
                    Logger.getLogger(Pcliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println("Eliminado");
            }
            limpiar();
            this.getInscripciones();

        } else {
            this.nInscripcion.vaciarDetalleInscripcion();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Pinscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Pinscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Pinscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Pinscripcion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Pinscripcion().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableDetalleInscripcion;
    private javax.swing.JTable jTableDisciplina;
    private javax.swing.JTable jTableInscripciones;
    private javax.swing.JButton jbtnAddInscripcion;
    private javax.swing.JButton jbtnPmain;
    private javax.swing.JButton jbtnQuitar;
    private javax.swing.JButton jbtnRegistrar;
    private javax.swing.JComboBox<String> jcbxClientes;
    private javax.swing.JLabel jlbMontoTotal;
    private javax.swing.JTextField jtextFecha;
    private javax.swing.JTextField jtextId;
    private javax.swing.JTextField jtextMontoTotal;
    // End of variables declaration//GEN-END:variables

    private void getDisciplinas() {
        DefaultTableModel lista = this.nDisciplina.getTablaDisciplinas(1);

        jTableDisciplina.setModel(lista);
        jtextMontoTotal.setVisible(false);
    }

    private void getClientes() {
        DefaultComboBoxModel comboClientes = this.nCliente.getComboBoxClientes();
        jcbxClientes.setModel(comboClientes);
    }

    private void limpiar() {
        //limpiamos tabla detalle
        String[] columnNames = {"NRO", "Disciplina", "Fecha Inicio", "Fecha Fin", "Monto"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        jTableDetalleInscripcion.setModel(model);
        jcbxClientes.setEnabled(true);
        jcbxClientes.setSelectedIndex(0);
        getDisciplinas();
        jtextFecha.setText("2020-05-31 12:50");
        jtextId.setText("");
        jlbMontoTotal.setText("Monto total 0.0 BS");
        jtextMontoTotal.setText("");
    }

    private void addATablaInscripcion() {
        int[] rows = jTableDisciplina.getSelectedRows();
        String nombre, id;
        for (int i : rows) {
            id = jTableDisciplina.getValueAt(i, 0).toString();
            nombre = jTableDisciplina.getValueAt(i, 1).toString();
            Ndisciplina disciplina = new Ndisciplina(Integer.parseInt(id), nombre);

            DefaultTableModel model = (DefaultTableModel) jTableDetalleInscripcion.getModel();
            model.addRow(new Object[]{id, disciplina, "2020-05-27", "", ""});
        }
    }

    private void quitarDisciplinaInscripcion() {
        int rows = jTableDetalleInscripcion.getSelectedRow();
        if (rows > -1) {
            DefaultTableModel model = (DefaultTableModel) jTableDetalleInscripcion.getModel();
            model.removeRow(rows);
        } else {
            jlbMontoTotal.setText("Monto total 0.0 BS");
            jtextMontoTotal.setText("");
        }
    }

    private void getInscripciones() {
        this.jTableInscripciones.setModel(this.nInscripcion.getTablaInscripciones());
    }

    private void mostrarDetalleInscripcion(ArrayList<Map> datos) {

        if (datos.size() > 0) {
            jtextId.setText(datos.get(0).get("id_boleta").toString());
            String[] columnNames = {"NRO", "Disciplina", "Fecha Inicio", "Fecha Fin", "Monto"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);
            //Agregamos el Detalle
            for (Map dato : datos) {
                Ndisciplina disciplina = new Ndisciplina(Integer.parseInt(dato.get("id_disciplina").toString()), dato.get("disciplina_nombre").toString());
                model.addRow(new Object[]{dato.get("id_disciplina"), disciplina, dato.get("fecha_inicio"), dato.get("fecha_fin"), dato.get("sub_monto")});
                nInscripcion.addDetalleInscripcion(disciplina.getId(), dato.get("fecha_inicio").toString(), dato.get("fecha_fin").toString(), Float.parseFloat(dato.get("sub_monto").toString()));
            }
            jTableDetalleInscripcion.setModel(model);
            // cargampos Cliente
            int cant = jcbxClientes.getItemCount();
            for (int i = 1; i < cant; i++) {
                jcbxClientes.setSelectedIndex(i);
                Ncliente clienteSelected = (Ncliente) jcbxClientes.getSelectedItem();
                if (clienteSelected.getNombre().equals(datos.get(0).get("cliente_nombre").toString())) {
                    break;
                }
            }
            jcbxClientes.setEnabled(false);
            String total = datos.get(0).get("monto").toString();
            jtextMontoTotal.setText(total);
            jtextFecha.setText(datos.get(0).get("fecha").toString());
            jlbMontoTotal.setText("Monto Total " + total + " BS");

        }
    }
}
