/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import java.util.ArrayList;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import negocion.*;

/**
 *
 * @author David Torrez
 */
public class Pdisciplina extends javax.swing.JFrame {

    /**
     * Creates new form Pdisciplina
     */
    public Ndisciplina nDisciplina;
    public Ninstructor nInstructor;
    public Nsala nSala;
    
    public Pdisciplina() {
        initComponents();
        this.setLocationRelativeTo(null);
        nDisciplina = new Ndisciplina();
        nInstructor = new Ninstructor();
        nSala = new Nsala();
        this.getDisciplinas();
        this.getInstructores();
        this.getSalas();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDisciplinas = new javax.swing.JTable();
        jtextId = new javax.swing.JTextField();
        jlbId = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtextNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtnRegistrar = new javax.swing.JButton();
        jbtnModificar = new javax.swing.JButton();
        jbtnEliminar = new javax.swing.JButton();
        jbtnPmain = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jcbxInstructor = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jpanelHorarios = new javax.swing.JPanel();
        jchbx1 = new javax.swing.JCheckBox();
        jchbx2 = new javax.swing.JCheckBox();
        jchbx3 = new javax.swing.JCheckBox();
        jchbx4 = new javax.swing.JCheckBox();
        jtextDescripcion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jcbxSala = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Gestionar Disciplinas");

        jTableDisciplinas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nro", "Nombre", "Instructor", "Sala", "Descripci√≥n"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDisciplinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDisciplinasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDisciplinas);

        jtextId.setEditable(false);

        jlbId.setText("Id");

        jLabel2.setText("Nombre");

        jtextNombre.setText("Aparatos ");

        jLabel3.setText("Descrpcion");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Lista de Disciplinas");

        jbtnRegistrar.setText("Registrar");
        jbtnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRegistrarActionPerformed(evt);
            }
        });

        jbtnModificar.setText("Modificar");
        jbtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnModificarActionPerformed(evt);
            }
        });

        jbtnEliminar.setText("Eliminar");
        jbtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarActionPerformed(evt);
            }
        });

        jbtnPmain.setText("Menu");
        jbtnPmain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPmainActionPerformed(evt);
            }
        });

        jLabel5.setText("Instructor");

        jcbxInstructor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eliga un Instructor", "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Horarios");

        jchbx1.setText("Lun-Vie. 8:00am-21:00pm");

        jchbx2.setText("Sab. 8:30am-20:00pm");

        jchbx3.setText("Lun-Mie-Vie. 8:00am-12:00pm");

        jchbx4.setText("Mar-Jue. 8:00am-12:00pm");

        javax.swing.GroupLayout jpanelHorariosLayout = new javax.swing.GroupLayout(jpanelHorarios);
        jpanelHorarios.setLayout(jpanelHorariosLayout);
        jpanelHorariosLayout.setHorizontalGroup(
            jpanelHorariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelHorariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelHorariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jchbx1)
                    .addComponent(jchbx2)
                    .addComponent(jchbx3)
                    .addComponent(jchbx4))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jpanelHorariosLayout.setVerticalGroup(
            jpanelHorariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelHorariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jchbx1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jchbx2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jchbx3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jchbx4))
        );

        jtextDescripcion.setText("jTextField1");

        jLabel7.setText("Sala");

        jcbxSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Eliga una Sala", "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jlbId)
                        .addGap(18, 18, 18)
                        .addComponent(jtextId, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(82, 82, 82)
                                .addComponent(jbtnPmain))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jbtnRegistrar))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jpanelHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jbtnModificar)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jbtnEliminar))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jtextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jcbxInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel7))))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(jtextDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jcbxSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jLabel4)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtextId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jtextNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbId)
                            .addComponent(jLabel3)
                            .addComponent(jtextDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbxInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jcbxSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(jpanelHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(32, 32, 32)
                                .addComponent(jLabel6)))
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jbtnPmain)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jbtnRegistrar)
                                .addComponent(jbtnModificar)))
                        .addGap(18, 18, 18)))
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPmainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPmainActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Pmain().setVisible(true);
    }//GEN-LAST:event_jbtnPmainActionPerformed

    private void jbtnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRegistrarActionPerformed
        // TODO add your handling code here:
        
        if (!jtextId.isVisible()
                && jcbxInstructor.getSelectedIndex() != 0 && jcbxSala.getSelectedIndex() != 0) {
            String nombre = jtextNombre.getText().trim();
            String descripcion = jtextDescripcion.getText().trim();
            Ninstructor inst = (Ninstructor) jcbxInstructor.getSelectedItem();
            Nsala sala = (Nsala) jcbxSala.getSelectedItem();
            try {
                this.nDisciplina.setDisciplinaR(
                        nombre,
                        descripcion,
                        Integer.parseInt(inst.getCi()),
                        sala.getId());

                //agregamos los horarios a la Disciplina Recien Insertada
                this.nDisciplina.setId(nDisciplina.getMaxId());
                ArrayList<String> horarios = horariosChecked();
                for (String horario : horarios) {
                    this.nDisciplina.addHorarioDisciplina(horario);
                }
                //insertar Horario
                this.nDisciplina.setHorariosR();
                System.out.println("Registrado");
            } catch (Exception ex) {
                Logger.getLogger(Pdisciplina.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        this.getDisciplinas();

    }//GEN-LAST:event_jbtnRegistrarActionPerformed

    private void jTableDisciplinasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDisciplinasMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        int row = source.rowAtPoint(evt.getPoint());
        String id = source.getModel().getValueAt(row, 0) + "";

        Map<String, String> datos = nDisciplina.getDisciplina(Integer.parseInt(id.trim()));
        if (!datos.containsKey("estado")) {
            this.limpiar();
            //Seleccionar el instructor y la sala selectas
            Map<String, String> instructor = nInstructor.getInstructor(datos.get("id_instructor"), 1);
            Map<String, String> sala = nSala.getSala(Integer.parseInt(datos.get("id_sala")));
            this.selectedComboBox(instructor.get("nombre"), sala.get("nombre"));
            this.hideShowId(true);
            jtextId.setText(datos.get("id"));
            jtextNombre.setText(datos.get("nombre"));
            jtextDescripcion.setText(datos.get("descripcion"));
            //Trae los horarios de la disciplina
            this.cargarHorarios(Integer.parseInt(datos.get("id")));
            System.out.println("Cargo datos");
        }


    }//GEN-LAST:event_jTableDisciplinasMouseClicked

    private void jbtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnModificarActionPerformed
        try {
            if (this.jtextId.isVisible() 
                    && jcbxInstructor.getSelectedIndex() != 0 && jcbxSala.getSelectedIndex() != 0) {
                int id = Integer.parseInt(jtextId.getText().trim());
                String nombre = jtextNombre.getText().trim();
                String descripcion = jtextDescripcion.getText().trim();
                Ninstructor inst = (Ninstructor) jcbxInstructor.getSelectedItem();
                Nsala sala = (Nsala) jcbxSala.getSelectedItem();

                this.nDisciplina.setDisciplinaM(
                        id,
                        nombre,
                        descripcion,
                        Integer.parseInt(inst.getCi()),
                        sala.getId());
                //Eliminar Los Horarios Existentes
                nDisciplina.setId(id);
                nDisciplina.setHorariosE();
                // Insertando nuevos Horarios
                ArrayList<String> horarios = horariosChecked();
                for (String horario : horarios) {
                    this.nDisciplina.addHorarioDisciplina(horario);
                }
                this.nDisciplina.setHorariosR();
                System.out.println("Modificado");
            }
            this.getDisciplinas();
        } catch (Exception ex) {
            Logger.getLogger(Pdisciplina.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbtnModificarActionPerformed

    private void jbtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarActionPerformed
        // TODO add your handling code here:
        if (jtextId.isVisible()) {
            int selectedOption = JOptionPane.showConfirmDialog(null,
                    "Esta Seguro de Elimanar la Disciplina " + this.jtextNombre.getText()+'?',
                    "Eligue",
                    JOptionPane.YES_NO_OPTION);
            if (selectedOption == JOptionPane.YES_OPTION) {
                try {
                    //eliminamos sus horarios
                    int idDisciplina  = Integer.parseInt(this.jtextId.getText());
                    nDisciplina.setId(idDisciplina);
                    nDisciplina.setHorariosE();
                    //elimininamos la disciplina
                    nDisciplina.setDisciplinaE(idDisciplina);
                    System.out.println("Eliminado");
                } catch (Exception ex) {
                    Logger.getLogger(Pcliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            this.getDisciplinas();
        }
    }//GEN-LAST:event_jbtnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Pdisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Pdisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Pdisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Pdisciplina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Pdisciplina().setVisible(true);
//            }
//        });
//    }

    private ArrayList<String> horariosChecked() {
        ArrayList<String> horario = new ArrayList<>();

        if (jchbx1.isSelected()) {
            horario.add(jchbx1.getText().trim());
        }
        if (jchbx2.isSelected()) {
            horario.add(jchbx2.getText().trim());
        }
        if (jchbx3.isSelected()) {
            horario.add(jchbx3.getText().trim());
        }
        if (jchbx4.isSelected()) {
            horario.add(jchbx4.getText().trim());
        }
        return horario;
    }

    private void hideShowId(boolean bandera) {
        jlbId.setVisible(bandera);
        jtextId.setVisible(bandera);
    }

    private void getInstructores() {
        DefaultComboBoxModel comboBox = this.nInstructor.getComboBoxInstructores();
        jcbxInstructor.setModel(comboBox);
    }

    private void getSalas() {
        DefaultComboBoxModel comboBox = this.nSala.getComboBoxSalas();
        jcbxSala.setModel(comboBox);

    }

    private void getDisciplinas() {

        DefaultTableModel listar = this.nDisciplina.getTablaDisciplinas(0);
        jTableDisciplinas.setModel(listar);
        this.hideShowId(false);
        this.limpiar();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDisciplinas;
    private javax.swing.JButton jbtnEliminar;
    private javax.swing.JButton jbtnModificar;
    private javax.swing.JButton jbtnPmain;
    private javax.swing.JButton jbtnRegistrar;
    private javax.swing.JComboBox<String> jcbxInstructor;
    private javax.swing.JComboBox<String> jcbxSala;
    private javax.swing.JCheckBox jchbx1;
    private javax.swing.JCheckBox jchbx2;
    private javax.swing.JCheckBox jchbx3;
    private javax.swing.JCheckBox jchbx4;
    private javax.swing.JLabel jlbId;
    private javax.swing.JPanel jpanelHorarios;
    private javax.swing.JTextField jtextDescripcion;
    private javax.swing.JTextField jtextId;
    private javax.swing.JTextField jtextNombre;
    // End of variables declaration//GEN-END:variables

    private void selectedComboBox(String instructor, String sala) {
        int cant1 = jcbxInstructor.getItemCount();
        int cant2 = jcbxSala.getItemCount();
        for (int i = 1; i < cant1; i++) {
            jcbxInstructor.setSelectedIndex(i);
            Ninstructor instructorSelected = (Ninstructor) jcbxInstructor.getSelectedItem();
            if (instructorSelected.getNombre().equals(instructor)) {
                break;
            }
        }
        for (int i = 1; i < cant2; i++) {
            jcbxSala.setSelectedIndex(i);
            Nsala salaSelected = (Nsala) jcbxSala.getSelectedItem();
            if (salaSelected.getNombre().equals(sala)) {
                break;
            }
        }

    }

    private void cargarHorarios(int idDisciplina) {
        nDisciplina.setId(idDisciplina);
        ArrayList<String> list = nDisciplina.getHorarios();
        for (String nhorario : list) {
            // System.out.println(nhorario);
            if (jchbx1.getText().equals(nhorario)) {
                jchbx1.setSelected(true);
            }
            if (jchbx2.getText().equals(nhorario)) {
                jchbx2.setSelected(true);
            }
            if (jchbx3.getText().equals(nhorario)) {
                jchbx3.setSelected(true);
            }
            if (jchbx4.getText().equals(nhorario)) {
                jchbx4.setSelected(true);
            }
        }
    }

    private void limpiar() {
        jtextId.setText("");
        jtextNombre.setText("");
        jtextDescripcion.setText("");
        jchbx1.setSelected(false);
        jchbx2.setSelected(false);
        jchbx3.setSelected(false);
        jchbx4.setSelected(false);

    }

}
